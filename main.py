import os
import yt_dlp
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, CallbackQueryHandler, CallbackContext, filters
import logging
import re
import time

logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO  # –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –≤—Å—ë –≤–∞–∂–Ω–æ–µ
)
logger = logging.getLogger(__name__)

file_handler = logging.FileHandler('bot_activity.log')
file_handler.setFormatter(logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - %(message)s'))
logger.addHandler(file_handler)

DOWNLOAD_PATH = 'downloads/'
user_links = {}
user_choices = {}

ADMIN_PANEL = False
active_users = set()
ADMIN_ID = 1770338622  # ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
SECRET_PASSWORD = 'windows.ru'

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –≤–∏–¥–µ–æ –∏–ª–∏ –∞—É–¥–∏–æ
def download_media(url: str, quality: str, is_audio: bool = False) -> str:
    ffmpeg_path = r'C:\ffmpeg-7.1.1-essentials_build\bin'  # –£–∫–∞–∂–∏—Ç–µ –ø—É—Ç—å –∫ ffmpeg, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –ø—É—Ç–∏ ffmpeg
    if not os.path.exists(ffmpeg_path):
        raise FileNotFoundError(f"–ü—É—Ç—å –∫ ffmpeg –Ω–µ –Ω–∞–π–¥–µ–Ω: {ffmpeg_path}")

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –ø–∞–ø–∫–∏ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
    if not os.path.exists(DOWNLOAD_PATH):
        os.makedirs(DOWNLOAD_PATH)
        logger.info(f"–ü–∞–ø–∫–∞ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –±—ã–ª–∞ —Å–æ–∑–¥–∞–Ω–∞: {DOWNLOAD_PATH}")

    if is_audio:
        ydl_opts = {
            'format': 'bestaudio/best',
            'outtmpl': os.path.join(DOWNLOAD_PATH, '%(title)s.mp3'),  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–∞–∫ .mp3
            'postprocessors': [{
                'key': 'FFmpegExtractAudio',
                'preferredcodec': 'mp3',
                'preferredquality': '192',
            }],
            'ffmpeg_location': ffmpeg_path  # –£–∫–∞–∑—ã–≤–∞–µ–º –ø—É—Ç—å –∫ ffmpeg
        }
    else:
        ydl_opts = {
            'format': quality,
            'outtmpl': os.path.join(DOWNLOAD_PATH, '%(title)s.%(ext)s'),
            'ffmpeg_location': ffmpeg_path  # –£–∫–∞–∑—ã–≤–∞–µ–º –ø—É—Ç—å –∫ ffmpeg
        }

    with yt_dlp.YoutubeDL(ydl_opts) as ydl:
        info_dict = ydl.extract_info(url, download=True)
        filename = ydl.prepare_filename(info_dict)
        
        # –ü–µ—á–∞—Ç–∞–µ–º –ø—É—Ç—å –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
        logger.info(f"–°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª: {filename}")
        
        # –£–¥–∞–ª—è–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π .webm —Ñ–∞–π–ª (–µ—Å–ª–∏ –µ—Å—Ç—å) –ø–æ—Å–ª–µ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏
        if is_audio and filename.endswith(".webm"):
            os.remove(filename)
            logger.info(f"–£–¥–∞–ª—ë–Ω –∏—Å—Ö–æ–¥–Ω—ã–π —Ñ–∞–π–ª: {filename}")

        # –°–æ–∑–¥–∞—ë–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
        directory = os.path.dirname(filename)
        if not os.path.exists(directory):
            os.makedirs(directory)
            logger.info(f"–°–æ–∑–¥–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {directory}")
        
        return filename

# /report –∫–æ–º–∞–Ω–¥–∞
async def report(update: Update, context: CallbackContext):
    user = update.effective_user
    bug_report = update.message.text[7:].strip()  # –û—Ç—Å–µ–∫–∞–µ–º "/report "
    
    if bug_report:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –±–∞–≥-—Ä–µ–ø–æ—Ä—Ç —Ç–µ–±–µ –Ω–∞ id
        try:
            # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –∏–∑ –ª–æ–≥–∞
            with open('bot_activity.log', 'r') as log_file:
                logs = log_file.readlines()[-10:]  # –ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å—Ç—Ä–æ–∫ –ª–æ–≥–∞

            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            message = f"–ë–∞–≥-—Ä–µ–ø–æ—Ä—Ç –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.full_name} (@{user.username}, ID: {user.id}):\n\n{bug_report}\n\n–ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å—Ç—Ä–æ–∫ –∏–∑ –ª–æ–≥–∞:\n```{''.join(logs)}```"
            await context.bot.send_message(chat_id=ADMIN_ID, text=message)
            await update.message.reply_text("‚úÖ –í–∞—à –±–∞–≥-—Ä–µ–ø–æ—Ä—Ç –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!")
        except Exception as e:
            await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ä–µ–ø–æ—Ä—Ç–∞: {e}")
    else:
        await update.message.reply_text("‚ö°Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –æ—à–∏–±–∫–∏ –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã /report.")

SECRET_PASSWORD = 'windows.ru'

# –°–µ–∫—Ä–µ—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞
async def secret_command(update: Update, context: CallbackContext):
    global ADMIN_PANEL
    user = update.effective_user
    secret_input = update.message.text[7:].strip()

    if secret_input == SECRET_PASSWORD and user.id == ADMIN_ID:
        await update.message.reply_text("‚úÖ –î–æ—Å—Ç—É–ø –æ—Ç–∫—Ä—ã—Ç. –¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å —Ç–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç —Ä–∞—Å—Å—ã–ª–∞–µ—Ç—Å—è –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º!")
        ADMIN_PANEL = True  # –í–∫–ª—é—á–∞–µ–º –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å
        await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º:")
    else:
        await update.message.reply_text("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å –∏–ª–∏ —É –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –¥–æ—Å—Ç—É–ø –∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏!")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞ –æ—Ç –∞–¥–º–∏–Ω–∞ (—Ä–∞—Å—Å—ã–ª–∫–∞ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º)
async def admin_message(update: Update, context: CallbackContext):
    global ADMIN_PANEL
    user = update.effective_user
    if ADMIN_PANEL and user.id == ADMIN_ID:  # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –∞–¥–º–∏–Ω - —ç—Ç–æ –∏–º–µ–Ω–Ω–æ —Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        text_to_send = update.message.text
        for user_id in active_users:  # –ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
            try:
                await context.bot.send_message(user_id, text_to_send)
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å—Å—ã–ª–∫–µ: {e}")
        await update.message.reply_text("‚úÖ –¢–µ–∫—Å—Ç –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º!")
        ADMIN_PANEL = False  # –í—ã–∫–ª—é—á–∞–µ–º –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
    elif user.id != ADMIN_ID:
        await update.message.reply_text("‚ùå –í—ã –Ω–µ –∏–º–µ–µ—Ç–µ –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏!")

# /start –∫–æ–º–∞–Ω–¥–∞
async def start(update: Update, context: CallbackContext):
    user_id = update.effective_user.id  # –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    active_users.add(user_id)  # –î–æ–±–∞–≤–ª—è–µ–º ID –≤ —Å–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

    keyboard = [
        [
            InlineKeyboardButton("üé¨ –°–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ", callback_data='video'),
            InlineKeyboardButton("üéµ –°–∫–∞—á–∞—Ç—å –∞—É–¥–∏–æ", callback_data='audio')
        ]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text("–ß—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å —Å–∫–∞—á–∞—Ç—å?", reply_markup=reply_markup)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –ø–æ—Å–ª–µ /start
async def start_choice(update: Update, context: CallbackContext):
    query = update.callback_query
    await query.answer()

    choice = query.data
    user_choices[query.message.chat_id] = choice

    if choice == 'video':
        await query.edit_message_text("üìé –¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ!")
    elif choice == 'audio':
        await query.edit_message_text("üìé –¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤ MP3!")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Å—ã–ª–∫–∏
# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Å—ã–ª–∫–∏
async def handle_message(update: Update, context: CallbackContext):
    global ADMIN_PANEL
    user = update.effective_user
    chat_id = update.effective_chat.id
    logger.info(f"User: {user.username} | ID: {user.id} | Name: {user.full_name} | Message: {update.message.text}")

    # –ï—Å–ª–∏ –±–æ—Ç –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
    if ADMIN_PANEL:
        if user.id == ADMIN_ID:  # –ñ–µ—Å—Ç–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
            text_to_send = update.message.text
            for user_id in active_users:  # –†–∞—Å—Å—ã–ª–∞–µ–º –≤—Å–µ–º –∞–∫—Ç–∏–≤–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
                try:
                    await context.bot.send_message(user_id, text_to_send)
                except Exception as e:
                    logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å—Å—ã–ª–∫–µ: {e}")
            await update.message.reply_text("‚úÖ –¢–µ–∫—Å—Ç –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º!")
            time.sleep(1)
            ADMIN_PANEL = False  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –æ–±—ã—á–Ω—ã–π —Ä–µ–∂–∏–º
    else:
        url = update.message.text
        choice = user_choices.get(chat_id)

        if choice is None:
            # –ï—Å–ª–∏ –≤—ã–±–æ—Ä –µ—â—ë –Ω–µ —Å–¥–µ–ª–∞–Ω, –Ω–∏—á–µ–≥–æ –Ω–µ –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ YouTube
            return

        if "youtube.com" in url or "youtu.be" in url:
            active_users.add(chat_id)  # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–∞–∫ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ
            user_links[chat_id] = url

            if choice == 'video':
                keyboard = [
                    [
                        InlineKeyboardButton("üé• 720p", callback_data='best[height<=720]'),
                        InlineKeyboardButton("üé• 480p", callback_data='best[height<=480]'),
                        InlineKeyboardButton("üé• 360p", callback_data='best[height<=360]')
                    ]
                ]
                reply_markup = InlineKeyboardMarkup(keyboard)
                await update.message.reply_text('–í—ã–±–µ—Ä–∏ –∫–∞—á–µ—Å—Ç–≤–æ –≤–∏–¥–µ–æ:', reply_markup=reply_markup)

            elif choice == 'audio':
                await update.message.reply_text("üéµ –°–∫–∞—á–∏–≤–∞—é –∏ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É—é –≤ MP3...")
                try:
                    audio_path = download_media(url, quality='bestaudio', is_audio=True)
                    with open(audio_path, 'rb') as audio_file:
                        await update.message.reply_audio(audio_file)
                    os.remove(audio_path)
                except Exception as e:
                    await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        else:
            if choice in ['audio', 'video']:
                await update.message.reply_text("üö´ –≠—Ç–æ –Ω–µ —Å—Å—ã–ª–∫–∞ –Ω–∞ YouTube!")
                
    user = update.effective_user
    chat_id = update.effective_chat.id
    logger.info(f"User: {user.username} | ID: {user.id} | Name: {user.full_name} | Message: {update.message.text}")

    # –ï—Å–ª–∏ –±–æ—Ç –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
    if ADMIN_PANEL:
        if user.id == ADMIN_ID:  # –ñ–µ—Å—Ç–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
            text_to_send = update.message.text
            for user_id in active_users:  # –†–∞—Å—Å—ã–ª–∞–µ–º –≤—Å–µ–º –∞–∫—Ç–∏–≤–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
                try:
                    await context.bot.send_message(user_id, text_to_send)
                except Exception as e:
                    logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å—Å—ã–ª–∫–µ: {e}")
            await update.message.reply_text("‚úÖ –¢–µ–∫—Å—Ç –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º!")
            time.sleep(1)
            ADMIN_PANEL = False  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –æ–±—ã—á–Ω—ã–π —Ä–µ–∂–∏–º
    else:
        url = update.message.text
        choice = user_choices.get(chat_id)

        if "youtube.com" in url or "youtu.be" in url:
            active_users.add(chat_id)  # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–∞–∫ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ
            user_links[chat_id] = url

            if choice == 'video':
                keyboard = [
                    [
                        InlineKeyboardButton("üé• 720p", callback_data='best[height<=720]'),
                        InlineKeyboardButton("üé• 480p", callback_data='best[height<=480]'),
                        InlineKeyboardButton("üé• 360p", callback_data='best[height<=360]')
                    ]
                ]
                reply_markup = InlineKeyboardMarkup(keyboard)
                await update.message.reply_text('–í—ã–±–µ—Ä–∏ –∫–∞—á–µ—Å—Ç–≤–æ –≤–∏–¥–µ–æ:', reply_markup=reply_markup)

            elif choice == 'audio':
                await update.message.reply_text("üéµ –°–∫–∞—á–∏–≤–∞—é –∏ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É—é –≤ MP3...")
                try:
                    audio_path = download_media(url, quality='bestaudio', is_audio=True)
                    with open(audio_path, 'rb') as audio_file:
                        await update.message.reply_audio(audio_file)
                    os.remove(audio_path)
                except Exception as e:
                    await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞: {e}")
            else:
                await update.message.reply_text("‚ö°Ô∏è –°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏ —á–µ—Ä–µ–∑ /start, —á—Ç–æ —Å–∫–∞—á–∞—Ç—å!")
        else:
            if not ADMIN_PANEL and choice == 'video' or 'audio':
                await update.message.reply_text("üö´ –≠—Ç–æ –Ω–µ —Å—Å—ã–ª–∫–∞ –Ω–∞ YouTube!")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –∫–∞—á–µ—Å—Ç–≤–∞ –≤–∏–¥–µ–æ
async def button(update: Update, context: CallbackContext):
    query = update.callback_query
    await query.answer()

    quality = query.data
    chat_id = query.message.chat_id
    url = user_links.get(chat_id)

    if url:
        await query.edit_message_text(text="üì• –°–∫–∞—á–∏–≤–∞—é –≤–∏–¥–µ–æ...")
        try:
            video_path = download_media(url, quality)
            with open(video_path, 'rb') as video_file:
                await query.message.reply_video(video_file)
            os.remove(video_path)
        except Exception as e:
            await query.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    else:
        await query.message.reply_text("üö´ –°—Å—ã–ª–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –û—Ç–ø—Ä–∞–≤—å –µ—ë —Å–Ω–æ–≤–∞.")

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
def main():
    token = '7570835144:AAH3wgRRRu-24FdTpKi1QB2eHO0hhTm0Go4'
    application = Application.builder().token(token).build()

    application.add_handler(CommandHandler("report", report))
    application.add_handler(CommandHandler("secret", secret_command))
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CallbackQueryHandler(start_choice, pattern='^(video|audio)$'))
    application.add_handler(CallbackQueryHandler(button))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    application.add_handler(MessageHandler(filters.TEXT & filters.COMMAND, admin_message))  # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –∫–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω–∞

    application.run_polling()

if __name__ == '__main__':
    if not os.path.exists(DOWNLOAD_PATH):
        os.makedirs(DOWNLOAD_PATH)
        logger.info(f"–ü–∞–ø–∫–∞ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –±—ã–ª–∞ —Å–æ–∑–¥–∞–Ω–∞: {DOWNLOAD_PATH}")

    main()
